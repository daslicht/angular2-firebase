{"version":3,"file":"firebase_list_factory.js","sourceRoot":"","sources":["../../src/database/firebase_list_factory.ts"],"names":[],"mappings":"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","sourcesContent":["import * as firebase from 'firebase';\nimport { AFUnwrappedDataSnapshot } from '../interfaces';\nimport { FirebaseListObservable } from './firebase_list_observable';\nimport { Observer } from 'rxjs/Observer';\nimport { observeOn } from 'rxjs/operator/observeOn';\nimport { observeQuery } from './query_observable';\nimport { Query, FirebaseListFactoryOpts } from '../interfaces';\nimport * as utils from '../utils';\nimport { mergeMap } from 'rxjs/operator/mergeMap';\nimport { map } from 'rxjs/operator/map';\n\nexport function FirebaseListFactory (\n  absoluteUrlOrDbRef:string |\n  firebase.database.Reference |\n  firebase.database.Query,\n  {preserveSnapshot, query = {}}:FirebaseListFactoryOpts = {}): FirebaseListObservable<any> {\n\n  let ref: firebase.database.Reference | firebase.database.Query;\n\n  utils.checkForUrlOrFirebaseRef(absoluteUrlOrDbRef, {\n    isUrl: () => ref = firebase.database().refFromURL(<string>absoluteUrlOrDbRef),\n    isRef: () => ref = <firebase.database.Reference>absoluteUrlOrDbRef,\n    isQuery: () => ref = <firebase.database.Query>absoluteUrlOrDbRef,\n  });\n\n  // if it's just a reference or string, create a regular list observable\n  if ((utils.isFirebaseRef(absoluteUrlOrDbRef) ||\n       utils.isString(absoluteUrlOrDbRef)) &&\n       utils.isEmptyObject(query)) {\n    return firebaseListObservable(ref, { preserveSnapshot });\n  }\n\n  const queryObs = observeQuery(query);\n  return new FirebaseListObservable(ref, subscriber => {\n    let sub = mergeMap.call(map.call(queryObs, query => {\n      let queried: firebase.database.Query = ref;\n      // Only apply the populated keys\n      // apply ordering and available querying options\n      // eg: ref.orderByChild('height').startAt(3)\n      // Check orderBy\n      if (query.orderByChild) {\n        queried = queried.orderByChild(query.orderByChild);\n      } else if (query.orderByKey) {\n        queried = queried.orderByKey();\n      } else if (query.orderByPriority) {\n        queried = queried.orderByPriority();\n      } else if (query.orderByValue) {\n        queried = queried.orderByValue();\n      }\n\n      // check equalTo\n      if (utils.isPresent(query.equalTo)) {\n          queried = queried.equalTo(query.equalTo);\n\n        if (utils.isPresent(query.startAt) || query.endAt) {\n          throw new Error('Query Error: Cannot use startAt or endAt with equalTo.');\n        }\n\n        // apply limitTos\n        if (utils.isPresent(query.limitToFirst)) {\n          queried = queried.limitToFirst(query.limitToFirst);\n        }\n\n        if (utils.isPresent(query.limitToLast)) {\n          queried = queried.limitToLast(query.limitToLast);\n        }\n\n        return queried;\n      }\n\n      // check startAt\n      if (utils.isPresent(query.startAt)) {\n          queried = queried.startAt(query.startAt);\n      }\n\n      if (utils.isPresent(query.endAt)) {\n          queried = queried.endAt(query.endAt);\n      }\n\n      if (utils.isPresent(query.limitToFirst) && query.limitToLast) {\n        throw new Error('Query Error: Cannot use limitToFirst with limitToLast.');\n      }\n\n      // apply limitTos\n      if (utils.isPresent(query.limitToFirst)) {\n          queried = queried.limitToFirst(query.limitToFirst);\n      }\n\n      if (utils.isPresent(query.limitToLast)) {\n          queried = queried.limitToLast(query.limitToLast);\n      }\n\n      return queried;\n    }), (queryRef: firebase.database.Reference, ix: number) => {\n      return firebaseListObservable(queryRef, { preserveSnapshot });\n    })\n    .subscribe(subscriber);\n\n    return () => sub.unsubscribe();\n  });\n}\n\nfunction firebaseListObservable(ref: firebase.database.Reference | firebase.database.Query, {preserveSnapshot}: FirebaseListFactoryOpts = {}): FirebaseListObservable<any> {\n\n  const listObs = new FirebaseListObservable(ref, (obs: Observer<any[]>) => {\n    let arr: any[] = [];\n    let hasInitialLoad = false;\n    // The list should only emit after the initial load\n    // comes down from the Firebase database, (e.g.) all\n    // the initial child_added events have fired.\n    // This way a complete array is emitted which leads\n    // to better rendering performance\n    ref.once('value', (snap) => {\n      hasInitialLoad = true;\n      obs.next(preserveSnapshot ? arr : arr.map(utils.unwrapMapFn));\n    }).catch(err => {\n      obs.error(err);\n      obs.complete()\n    });\n\n    let addFn = ref.on('child_added', (child: any, prevKey: string) => {\n      arr = onChildAdded(arr, child, prevKey);\n      // only emit the array after the initial load\n      if (hasInitialLoad) {\n        obs.next(preserveSnapshot ? arr : arr.map(utils.unwrapMapFn));\n      }\n    }, err => {\n      if (err) { obs.error(err); obs.complete(); }\n    });\n\n    let remFn = ref.on('child_removed', (child: any) => {\n      arr = onChildRemoved(arr, child)\n      if (hasInitialLoad) {\n        obs.next(preserveSnapshot ? arr : arr.map(utils.unwrapMapFn));\n      }\n    }, err => {\n      if (err) { obs.error(err); obs.complete(); }\n    });\n\n    let chgFn = ref.on('child_changed', (child: any, prevKey: string) => {\n      arr = onChildChanged(arr, child, prevKey)\n      if (hasInitialLoad) {\n        // This also manages when the only change is prevKey change\n        obs.next(preserveSnapshot ? arr : arr.map(utils.unwrapMapFn));\n      }\n    }, err => {\n      if (err) { obs.error(err); obs.complete(); }\n    });\n\n    return () => {\n      ref.off('child_added', addFn);\n      ref.off('child_removed', remFn);\n      ref.off('child_changed', chgFn);\n    }\n  });\n\n  // TODO: should be in the subscription zone instead\n  return observeOn.call(listObs, new utils.ZoneScheduler(Zone.current));\n}\n\nexport function onChildAdded(arr:any[], child:any, prevKey:string): any[] {\n  if (!arr.length) {\n    return [child];\n  }\n\n  return arr.reduce((accumulator:firebase.database.DataSnapshot[], curr:firebase.database.DataSnapshot, i:number) => {\n    if (!prevKey && i===0) {\n      accumulator.push(child);\n    }\n    accumulator.push(curr);\n    if (prevKey && prevKey === curr.key) {\n      accumulator.push(child);\n    }\n    return accumulator;\n  }, []);\n}\n\nexport function onChildChanged(arr:any[], child:any, prevKey:string): any[] {\n  return arr.reduce((accumulator:any[], val:any, i:number) => {\n    if (!prevKey && i==0) {\n      accumulator.push(child);\n      if (val.key !== child.key) {\n        accumulator.push(val);\n      }\n    } else if(val.key === prevKey) {\n      accumulator.push(val);\n      accumulator.push(child);\n    } else if (val.key !== child.key) {\n      accumulator.push(val);\n    }\n    return accumulator;\n  }, []);\n}\n\nexport function onChildRemoved(arr:any[], child:any): any[] {\n  return arr.filter(c => c.key !== child.key);\n}\n\nexport function onChildUpdated(arr:any[], child:any, prevKey:string): any[] {\n  return arr.map((v, i, arr) => {\n    if(!prevKey && !i) {\n      return child;\n    } else if (i > 0 && arr[i-1].key === prevKey) {\n      return child;\n    } else {\n      return v;\n    }\n  });\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}